// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shared.proto

#ifndef PROTOBUF_shared_2eproto__INCLUDED
#define PROTOBUF_shared_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_shared_2eproto();
void protobuf_AssignDesc_shared_2eproto();
void protobuf_ShutdownFile_shared_2eproto();

class Enums;
class TFloat;
class TTFloat;

enum PkgFlag {
  PKG_COMPRESS = 0,
  PKG_CRYPTO = 1
};
bool PkgFlag_IsValid(int value);
const PkgFlag PkgFlag_MIN = PKG_COMPRESS;
const PkgFlag PkgFlag_MAX = PKG_CRYPTO;
const int PkgFlag_ARRAYSIZE = PkgFlag_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgFlag_descriptor();
inline const ::std::string& PkgFlag_Name(PkgFlag value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgFlag_descriptor(), value);
}
inline bool PkgFlag_Parse(
    const ::std::string& name, PkgFlag* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgFlag>(
    PkgFlag_descriptor(), name, value);
}
// ===================================================================

class Enums : public ::google::protobuf::Message {
 public:
  Enums();
  virtual ~Enums();

  Enums(const Enums& from);

  inline Enums& operator=(const Enums& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Enums& default_instance();

  void Swap(Enums* other);

  // implements Message ----------------------------------------------

  Enums* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Enums& from);
  void MergeFrom(const Enums& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Enums)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_shared_2eproto();
  friend void protobuf_AssignDesc_shared_2eproto();
  friend void protobuf_ShutdownFile_shared_2eproto();

  void InitAsDefaultInstance();
  static Enums* default_instance_;
};
// -------------------------------------------------------------------

class TFloat : public ::google::protobuf::Message {
 public:
  TFloat();
  virtual ~TFloat();

  TFloat(const TFloat& from);

  inline TFloat& operator=(const TFloat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TFloat& default_instance();

  void Swap(TFloat* other);

  // implements Message ----------------------------------------------

  TFloat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TFloat& from);
  void MergeFrom(const TFloat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 v = 1;
  inline bool has_v() const;
  inline void clear_v();
  static const int kVFieldNumber = 1;
  inline ::google::protobuf::int32 v() const;
  inline void set_v(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TFloat)
 private:
  inline void set_has_v();
  inline void clear_has_v();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 v_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_shared_2eproto();
  friend void protobuf_AssignDesc_shared_2eproto();
  friend void protobuf_ShutdownFile_shared_2eproto();

  void InitAsDefaultInstance();
  static TFloat* default_instance_;
};
// -------------------------------------------------------------------

class TTFloat : public ::google::protobuf::Message {
 public:
  TTFloat();
  virtual ~TTFloat();

  TTFloat(const TTFloat& from);

  inline TTFloat& operator=(const TTFloat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TTFloat& default_instance();

  void Swap(TTFloat* other);

  // implements Message ----------------------------------------------

  TTFloat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TTFloat& from);
  void MergeFrom(const TTFloat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 v = 1;
  inline bool has_v() const;
  inline void clear_v();
  static const int kVFieldNumber = 1;
  inline ::google::protobuf::int32 v() const;
  inline void set_v(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TTFloat)
 private:
  inline void set_has_v();
  inline void clear_has_v();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 v_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_shared_2eproto();
  friend void protobuf_AssignDesc_shared_2eproto();
  friend void protobuf_ShutdownFile_shared_2eproto();

  void InitAsDefaultInstance();
  static TTFloat* default_instance_;
};
// ===================================================================


// ===================================================================

// Enums

// -------------------------------------------------------------------

// TFloat

// required int32 v = 1;
inline bool TFloat::has_v() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TFloat::set_has_v() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TFloat::clear_has_v() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TFloat::clear_v() {
  v_ = 0;
  clear_has_v();
}
inline ::google::protobuf::int32 TFloat::v() const {
  return v_;
}
inline void TFloat::set_v(::google::protobuf::int32 value) {
  set_has_v();
  v_ = value;
}

// -------------------------------------------------------------------

// TTFloat

// required int32 v = 1;
inline bool TTFloat::has_v() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TTFloat::set_has_v() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TTFloat::clear_has_v() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TTFloat::clear_v() {
  v_ = 0;
  clear_has_v();
}
inline ::google::protobuf::int32 TTFloat::v() const {
  return v_;
}
inline void TTFloat::set_v(::google::protobuf::int32 value) {
  set_has_v();
  v_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PkgFlag>() {
  return ::PkgFlag_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_shared_2eproto__INCLUDED
